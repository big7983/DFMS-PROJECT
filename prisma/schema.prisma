generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

//------------------------Model------------------------

model User {
  id                  String           @id @default(auto()) @map("_id") @db.ObjectId
  employee_id         String           @unique
  email               String           @unique
  name                String?
  level               String 
  position            String
  section             String
  department          String
  role                String
}

model Training_Form {
  id                    String          @id @default(auto()) @map("_id") @db.ObjectId
  idform                String          @unique
  nameform              String          @unique
  datesubmiss           String          @unique
  requester_id          String?         @unique
  requester_name        String?         @unique 
  requester_section     String?         @unique 
  requester_department  String?         @unique 
  requester_position    String?         @unique 
  stakeholders          Stakeholders    @unique
  approver              Approver        @unique
  information           Information?    @unique
  budget                Budget?         @unique
  latestupdate          String          @unique
  active                Boolean         @default(true)
  trainingstatus        String          @unique
  history               Json? 
}

model Training_Survey {
  id                 String          @id @default(auto()) @map("_id") @db.ObjectId
  idform             String
  nameform           String
  trainingform_id    String?
  datesubmiss        String
  survey             Survey
  evaluatorfeedback  EvaluatorFeedback
  information        Information?     @unique
  evaluationstatus   String
  latestupdate       String
  reporter_id        String
  reporter           detailuser       @unique
  evaluator_id       String
  evaluator          detailuser       @unique
  section            String
  department         String
  isrepoeted         Boolean          @default(false)
  isevaluated        Boolean          @default(false)
  active             Boolean          @default(true)
}

model Organization {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String     @unique 
  head        Json       @unique 
  member      Json       @unique 
  affiliation String     @unique
}

//--------------------type--------------------

//Training_Form

type Stakeholders {
  member              Json
  isfullyacknowledged Boolean
}

type Approver {
  member          Json
  approvalorder   Int
  isfullyapproved String
}

type Information {
  course    String
  location  String
  datestart String
  dateend   String
  objective String
}

type Budget {
  received       Float
  remaining      Float
  registration   Float
  room           Float
  transportation Float
  allowance      Float
  other          Float
  total          Float
}

//Training_Survey
type Survey {
  keycontent           String
  matchesobjectives    String
  remaining            String
  course_result        String
  course_reason        String
  lecturer_result      String
  lecturer_reason      String
  document_result      String
  document_reason      String
  service_result       String
  service_reason       String
  selectedOptions      String[]
}

type EvaluatorFeedback {
  objective                   String
  costEffectiveness           String
  workBenefit                 String
  objectiveAlignment          String
  futureRecommendation        String
  reasonfutureRecommendation  String
  additionalcomments          String
}

type detailuser {
  name                String
  level               String 
  position            String
  email               String
}

//****************************************************************************